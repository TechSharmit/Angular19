| Decorator                  | What it Does 📝                                                                             | Where Angular Looks 👀                                           | Example Use Case 💡                                                            | Common? ✅❌          |
| -------------------------- | ------------------------------------------------------------------------------------------- | ---------------------------------------------------------------- | ------------------------------------------------------------------------------ | ------------------- |
| **Default (no decorator)** | Injects by **class type** automatically.                                                    | Root injector (or closest provider in hierarchy).                | Most services (`LoggerService`, `AuthService`).                                | ✅ Very common       |
| **@Inject(token)**         | Manually specify **which token** to inject. Needed for non-class values (strings, configs). | Token lookup in injector tree.                                   | Inject API URL, app config values, multi-providers.                            | ✅ Common in configs |
| **@Optional()**            | If service not found → returns `null` instead of error.                                     | Normal lookup (root → parent → child), but result can be `null`. | Optional features/plugins (e.g., analytics service may or may not be present). | ⚡ Sometimes         |
| **@Self()**                | Only checks **current injector** (component itself). Won’t go to parent/root.               | Self only. ❌ No parent/root lookup.                              | If each child should have its **own service instance**.                        | ❌ Rare              |
| **@SkipSelf()**            | Skip current injector, start lookup from **parent** upwards.                                | Parent → Grandparent → Root. ❌ Skips self.                       | Form controls inside a parent form → always use parent’s form service.         | ❌ Rare              |
| **@Host()**                | Check **self + immediate parent (host)** only. ❌ Won’t climb higher than parent.            | Self → Parent. Stops there.                                      | Ensuring child uses only parent’s provider, not grandparent’s.                 | ❌ Rare              |
